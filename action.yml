name: Install GNU Fortran
description: Install & cache GNU Fortran
runs:
  using: composite
  steps:
    - name: Migration warning
      shell: bash
      run: |
        echo "WARNING: This action is unsupported."
        echo "Use fortran-lang/setup-fortran instead (https://github.com/fortran-lang/setup-fortran)."

    - name: Symlink to gfortran (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo ln -fs /usr/bin/gfortran-10 /usr/local/bin/gfortran
        sudo ln -fs /usr/bin/gcc-10 /usr/local/bin/gcc
        sudo ln -fs /usr/bin/g++-10 /usr/local/bin/g++

    - name: Symlink to gfortran (MacOS)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        sudo ln -fs /usr/local/bin/gfortran-12 /usr/local/bin/gfortran   
        sudo ln -fs /usr/local/bin/gcc-12 /usr/local/bin/gcc
        sudo ln -fs /usr/local/bin/g++-12 /usr/local/bin/g++
        
        # symlink dylib location for previous versions
        sudo ln -fs /usr/local/opt/gcc/lib/gcc/12 /usr/local/opt/gcc/lib/gcc/11
        sudo ln -fs /usr/local/opt/gcc/lib/gcc/12 /usr/local/opt/gcc/lib/gcc/10

    - name: Workaround v20220626.1 gfortran executable run failures (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: |
        FCDIR=/c/ProgramData/Chocolatey/bin
        LNDIR=/c/ProgramData/Chocolatey/lib/mingw/tools/install/mingw64/bin
        if [ -d "$FCDIR" ] && [ -f "$LNDIR/libgfortran-5.dll" ] && [ ! -f "$FCDIR/libgfortran-5.dll" ]; then
            ln -s "$LNDIR/libgfortran-5.dll" "$FCDIR/libgfortran-5.dll"
        fi

    - name: Print GNU compiler versions
      if: runner.os != 'Windows'
      shell: bash
      run: |
        gfortran --version
        gcc --version
        g++ --version

    - name: Print GNU compiler versions (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        gfortran --version
        gcc --version
        g++ --version
